{"version":3,"sources":["payment-methods.ts"],"names":[],"mappings":"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","file":"payment-methods.js","sourceRoot":"../../../src/functions/bin","sourcesContent":["\nimport { Context, Callback, APIGatewayEvent } from \"aws-lambda\";\nimport fetch from \"node-fetch\";\n\ninterface SnipcartPaymentMethod {\n  id: string\n  name: string;\n  checkoutUrl: string;\n  iconUrl?: string;\n}\n\nif (!process.env.PRODUCTION) {\n  process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '0' // For local development\n}\n\nexports.handler = async function (event: APIGatewayEvent, context: Context, callback: Callback) {\n  // Get request's body\n  const request = JSON.parse(event.body)\n  const API_URL = process.env.API_URL || 'https://localhost:8041';\n  const SITE_URL = process.env.URL || 'http://localhost:8040';\n\n  // Validate that the request is coming from Snipcart\n  const response = await fetch(`${API_URL}/api/public/custom-payment-gateway/validate?publicToken=${request.PublicToken}`)\n\n  // Return 404 if the request is not from Snipcart\n  if (!response.ok) return {\n    statusCode: 404,\n    body: \"\"\n  }\n\n  // Create payment method list\n  let paymentMethodList: SnipcartPaymentMethod[] = [{\n    id: 'sleeky_pay',\n    name: 'SleekyPay',\n    checkoutUrl: `${SITE_URL}/index.html`,\n  }]\n\n  // Return available payment methods\n  return {\n    statusCode: 200,\n    body: JSON.stringify(paymentMethodList)\n  };\n}\n"]}