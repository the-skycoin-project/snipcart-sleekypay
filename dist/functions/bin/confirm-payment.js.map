{"version":3,"sources":["confirm-payment.ts"],"names":[],"mappings":"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","file":"confirm-payment.js","sourceRoot":"../../../src/functions/bin","sourcesContent":["import { Context, Callback, APIGatewayEvent } from \"aws-lambda\";\nimport fetch from 'node-fetch';\nimport uuid from 'uuid';\n\nif (!process.env.PRODUCTION) {\n  process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '0' // For local development\n}\n\nexports.handler = async function (\n  event: APIGatewayEvent,\n  context: Context,\n  callback: Callback) {\n  interface ConfirmResult {\n    returnUrl: string;\n  }\n\n  const requestBody = JSON.parse(event.body);\n  const paymentId = uuid();\n\n  const API_URL = process.env.API_URL || 'https://localhost:12666';\n  const SITE_URL = process.env.URL || event.headers.origin;\n\n  const response = await fetch(\n    `${API_URL}/api/private/custom-payment-gateway/payment`, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${process.env.BEARER_TOKEN}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      paymentSessionId: requestBody.paymentSessionId,\n      state: requestBody.state,\n      error: requestBody.error,\n      transactionId: paymentId,\n      instructions: 'Your payment will appear on your statement in the coming days',\n      links: {\n        refunds: `${SITE_URL}/.netlify/functions/refund-payment?transactionId=${paymentId}`,\n      }\n    }),\n  });\n\n  if (response.ok) {\n    const body = (await response.json()) as ConfirmResult;\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ ok: true, returnUrl: body.returnUrl })\n    };\n  }\n}"]}